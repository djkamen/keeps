// Generated by Dagger (https://dagger.dev).
package com.notesapp.data.repositories;

import com.notesapp.data.datasources.local.NotesLocalDataSource;
import com.notesapp.data.datasources.remote.GoogleDriveService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NotesRepositoryImpl_Factory implements Factory<NotesRepositoryImpl> {
  private final Provider<NotesLocalDataSource> localDataSourceProvider;

  private final Provider<GoogleDriveService> googleDriveServiceProvider;

  public NotesRepositoryImpl_Factory(Provider<NotesLocalDataSource> localDataSourceProvider,
      Provider<GoogleDriveService> googleDriveServiceProvider) {
    this.localDataSourceProvider = localDataSourceProvider;
    this.googleDriveServiceProvider = googleDriveServiceProvider;
  }

  @Override
  public NotesRepositoryImpl get() {
    return newInstance(localDataSourceProvider.get(), googleDriveServiceProvider.get());
  }

  public static NotesRepositoryImpl_Factory create(
      Provider<NotesLocalDataSource> localDataSourceProvider,
      Provider<GoogleDriveService> googleDriveServiceProvider) {
    return new NotesRepositoryImpl_Factory(localDataSourceProvider, googleDriveServiceProvider);
  }

  public static NotesRepositoryImpl newInstance(NotesLocalDataSource localDataSource,
      GoogleDriveService googleDriveService) {
    return new NotesRepositoryImpl(localDataSource, googleDriveService);
  }
}
