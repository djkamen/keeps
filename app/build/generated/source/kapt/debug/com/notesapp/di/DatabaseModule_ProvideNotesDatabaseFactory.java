// Generated by Dagger (https://dagger.dev).
package com.notesapp.di;

import android.content.Context;
import com.notesapp.data.datasources.local.NotesDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvideNotesDatabaseFactory implements Factory<NotesDatabase> {
  private final Provider<Context> contextProvider;

  public DatabaseModule_ProvideNotesDatabaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public NotesDatabase get() {
    return provideNotesDatabase(contextProvider.get());
  }

  public static DatabaseModule_ProvideNotesDatabaseFactory create(
      Provider<Context> contextProvider) {
    return new DatabaseModule_ProvideNotesDatabaseFactory(contextProvider);
  }

  public static NotesDatabase provideNotesDatabase(Context context) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideNotesDatabase(context));
  }
}
