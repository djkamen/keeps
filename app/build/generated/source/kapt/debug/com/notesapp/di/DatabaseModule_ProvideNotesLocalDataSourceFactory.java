// Generated by Dagger (https://dagger.dev).
package com.notesapp.di;

import com.notesapp.data.datasources.local.NotesDao;
import com.notesapp.data.datasources.local.NotesLocalDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvideNotesLocalDataSourceFactory implements Factory<NotesLocalDataSource> {
  private final Provider<NotesDao> notesDaoProvider;

  public DatabaseModule_ProvideNotesLocalDataSourceFactory(Provider<NotesDao> notesDaoProvider) {
    this.notesDaoProvider = notesDaoProvider;
  }

  @Override
  public NotesLocalDataSource get() {
    return provideNotesLocalDataSource(notesDaoProvider.get());
  }

  public static DatabaseModule_ProvideNotesLocalDataSourceFactory create(
      Provider<NotesDao> notesDaoProvider) {
    return new DatabaseModule_ProvideNotesLocalDataSourceFactory(notesDaoProvider);
  }

  public static NotesLocalDataSource provideNotesLocalDataSource(NotesDao notesDao) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideNotesLocalDataSource(notesDao));
  }
}
