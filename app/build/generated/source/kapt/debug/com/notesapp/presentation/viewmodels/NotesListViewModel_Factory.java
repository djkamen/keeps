// Generated by Dagger (https://dagger.dev).
package com.notesapp.presentation.viewmodels;

import com.notesapp.domain.usecases.DeleteNoteUseCase;
import com.notesapp.domain.usecases.GetNotesUseCase;
import com.notesapp.domain.usecases.SearchNotesUseCase;
import com.notesapp.domain.usecases.SyncNotesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NotesListViewModel_Factory implements Factory<NotesListViewModel> {
  private final Provider<GetNotesUseCase> getNotesUseCaseProvider;

  private final Provider<DeleteNoteUseCase> deleteNoteUseCaseProvider;

  private final Provider<SyncNotesUseCase> syncNotesUseCaseProvider;

  private final Provider<SearchNotesUseCase> searchNotesUseCaseProvider;

  public NotesListViewModel_Factory(Provider<GetNotesUseCase> getNotesUseCaseProvider,
      Provider<DeleteNoteUseCase> deleteNoteUseCaseProvider,
      Provider<SyncNotesUseCase> syncNotesUseCaseProvider,
      Provider<SearchNotesUseCase> searchNotesUseCaseProvider) {
    this.getNotesUseCaseProvider = getNotesUseCaseProvider;
    this.deleteNoteUseCaseProvider = deleteNoteUseCaseProvider;
    this.syncNotesUseCaseProvider = syncNotesUseCaseProvider;
    this.searchNotesUseCaseProvider = searchNotesUseCaseProvider;
  }

  @Override
  public NotesListViewModel get() {
    return newInstance(getNotesUseCaseProvider.get(), deleteNoteUseCaseProvider.get(), syncNotesUseCaseProvider.get(), searchNotesUseCaseProvider.get());
  }

  public static NotesListViewModel_Factory create(Provider<GetNotesUseCase> getNotesUseCaseProvider,
      Provider<DeleteNoteUseCase> deleteNoteUseCaseProvider,
      Provider<SyncNotesUseCase> syncNotesUseCaseProvider,
      Provider<SearchNotesUseCase> searchNotesUseCaseProvider) {
    return new NotesListViewModel_Factory(getNotesUseCaseProvider, deleteNoteUseCaseProvider, syncNotesUseCaseProvider, searchNotesUseCaseProvider);
  }

  public static NotesListViewModel newInstance(GetNotesUseCase getNotesUseCase,
      DeleteNoteUseCase deleteNoteUseCase, SyncNotesUseCase syncNotesUseCase,
      SearchNotesUseCase searchNotesUseCase) {
    return new NotesListViewModel(getNotesUseCase, deleteNoteUseCase, syncNotesUseCase, searchNotesUseCase);
  }
}
